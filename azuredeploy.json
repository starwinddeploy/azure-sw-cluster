{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "East US 2",
        "South Central US",
        "West US",
        "Central US",
        "North Central US",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of deployment"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Type of the storage account"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "starwindbyol",
        "starwindperhour"
      ],
      "metadata": {
        "description": "StarWind Image SKU"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin Username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin Password"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "dynamic",
      "allowedValues": [
        "dynamic"
      ],
      "metadata": {
        "description": "Type of Public IP"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "VNET address prefix in CIDR format"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet 1 address prefix in CIDR format"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Subnet 2 address prefix in CIDR format"
      }
    }

  },
  "variables": {
    "imagePublisher": "starwind",
    "imageOffer": "starwindvirtualsan",
    "vmName": "vm",
    "vmCount": 2,
    "subnet1Name": "subnet1",
    "subnet2Name": "subnet2",
    "virtualNetworkName": "virtualNetwork",
    "publicIPName": "publicIP",
    "nic1Name": "node",
    "nic2Name": "sync",
    "availabilitySetName": "availabilitySet1",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet2Name'))]",
    "CustomScriptScript": "https://raw.githubusercontent.com/starwinddeploy/azure-sw-cluster/master/scripts/CustomScript.ps1"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },

    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[int('2')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "ipLoop",
        "count": "[variables('vmCount')]"

      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nic1Name'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('vmCount')]"

      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPName'), copyindex(1))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[concat(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName')), copyindex(1))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nic2Name'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[variables('vmCount')]"

      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPName'), copyindex(1))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[variables('vmCount')]"
      },
      "plan": {
        "name": "[parameters('imageSKU')]",
        "publisher": "starwind",
        "product": "starwindvirtualsan"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'), copyindex(1))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'), copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds',copyindex(1),'/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name')), copyindex(1))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name')), copyindex(1))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '2', '/CustomScript')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('vmName'), '2'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('CustomScriptScript'))]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScript'))]"
        }
      }
    }
  ]
}